(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{305:function(t,e,s){"use strict";s.r(e);var a=s(14),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),e("h2",{attrs:{id:"docker简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker简介"}},[t._v("#")]),t._v(" Docker简介")]),t._v(" "),e("p",[e("strong",[t._v("为什么出现？")])]),t._v(" "),e("p",[t._v("当实际生产环境需要有多个不同版本的环境时如果使用虚拟机将大大浪费资源")]),t._v(" "),e("p",[t._v("docker 容器可以做到每个版本都打包为一个容器镜像 然后在同一个主机上运行 每个容器都可以用于自己的依赖项和运行环境不会互相干扰")]),t._v(" "),e("p",[e("strong",[t._v("介绍")])]),t._v(" "),e("p",[t._v("Docker的核心思想就是来自集装箱；集装箱的概念是隔离货物，所以docker的核心就是隔离机制。同时docker使用可移植镜像所以部署以及运维极其方便快捷。")]),t._v(" "),e("p",[t._v("Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的"),e("a",{attrs:{href:"http://baike.baidu.com/view/1634.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux"),e("OutboundLink")],1),t._v("机器上，也可以实现虚拟化。")]),t._v(" "),e("p",[t._v("容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）。几乎没有性能开销,可以很容易地在机器和数据中心中运行。最重要的是,他们不依赖于任何语言、框架或包括系统。")]),t._v(" "),e("p",[t._v("下面对比了Docker 和传统虚拟化（KVM、XEN等）方式的不同之处，容器是在操作系统层面上实现虚拟化，直接复用本地主机的操作系统，而传统方式则是在硬件的基础上，虚拟出自己的系统，再在系统上部署相关的APP应用。")]),t._v(" "),e("p",[t._v("Docker虚拟化有三个概念需要理解，分别镜像、容器、仓库。")]),t._v(" "),e("p",[e("strong",[t._v("镜像（image）：")])]),t._v(" "),e("p",[t._v("docker的镜像其实就是模板，跟我们常见的ISO镜像类似，是一个样板。通过这个镜像可以创建多个容器（最终服务运行或者项目运行就是在容器中的）。")]),t._v(" "),e("p",[e("strong",[t._v("容器（container）：")]),t._v("\nDocker利用容器技术，独立运行一个或者一个组应用，通过镜像来创建的。\n启动，停止，删除，基本命令！\n目前就可以把这个容器理解为就是一个简易的linux系统")]),t._v(" "),e("p",[e("strong",[t._v("仓库（repository）：")]),t._v("\n仓库就是存放镜像的地方！\n分为公开仓库（Public）和私有仓库（Private）两种形式。")]),t._v(" "),e("h2",{attrs:{id:"docker安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[t._v("#")]),t._v(" Docker安装")]),t._v(" "),e("ol",[e("li",[e("p",[e("strong",[t._v("查看系统内核 3.10版本可用docker")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("uname -r\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("使用 root 权限更新 yum 包（生产环境中此步操作需慎重，看自己情况，学习的话随便搞）")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("yum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" update\n\n注意​ \nyum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" update：升级所有包同时也升级软件和系统内核；​ \nyum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" upgrade：只升级所有包，不升级软件和系统内核\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("卸载旧版本（如果之前安装过的话）")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("yum remove "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("  docker-common docker-selinux docker-engine\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("安装需要的软件包， yum-util 提供yum-config-manager功能，另两个是devicemapper驱动依赖")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" yum-utils device-mapper-persistent-data lvm2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("设置 yum 源")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("yum-config-manager --add-repo http://download.docker.com/linux/centos/docker-ce.repo（中央仓库）\n\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo（阿里仓库）\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("选择docker版本并安装")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("yum list docker-ce "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--showduplicates")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-r")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("选择一个版本并安装")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("yum "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-y")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce-18.03.1.ce\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("启动 Docker 并设置开机自启")])]),t._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("systemctl start "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\nsystemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])])]),t._v(" "),e("h2",{attrs:{id:"docker卸载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker卸载"}},[t._v("#")]),t._v(" Docker卸载")]),t._v(" "),e("p",[t._v("1."),e("strong",[t._v("卸载命令")])]),t._v(" "),e("blockquote",[e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("yum remove docker*\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("p",[t._v("2."),e("strong",[t._v("查看不存在则卸载成功")])]),t._v(" "),e("blockquote",[e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ yum list installed|grep docker\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("p",[t._v("3."),e("strong",[t._v("删除docker相关文件")])]),t._v(" "),e("blockquote",[e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ rm -rf /var/lib/docker\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("h3",{attrs:{id:"docker卸载解决问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker卸载解决问题"}},[t._v("#")]),t._v(" Docker卸载解决问题")]),t._v(" "),e("p",[t._v("yum remove命令出现")]),t._v(" "),e("p",[e("code",[t._v("Loaded plugins: fastestmirror")]),t._v(" "),e("code",[t._v("fastestmirror")]),t._v("是yum的一个加速插件，这里是插件提示信息是插件不能用了")]),t._v(" "),e("p",[e("strong",[t._v("解决步骤")]),t._v("：\n1.修改插件的配置文件  将enabled=1改为enabled=0")]),t._v(" "),e("blockquote",[e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ vi /etc/yum/pluginconf.d/fastestmirror.conf \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("p",[t._v("2.修改yum的配置文件  将plugins=1改为plugins=0")]),t._v(" "),e("blockquote",[e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ vi /etc/yum.conf \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])]),t._v(" "),e("p",[t._v("3.清除缓存并重新构建yum源")]),t._v(" "),e("blockquote",[e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("yum clean all\nrm -rf /var/cache/yum\nyum makecache\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])])]),t._v(" "),e("h2",{attrs:{id:"docker部署-net"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker部署-net"}},[t._v("#")]),t._v(" Docker部署.NET")]),t._v(" "),e("p",[e("strong",[t._v("DockerFile")])]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base\nWORKDIR /app\nEXPOSE 81\n\nFROM base AS final\n# 从当前文件目录，复制文件到docker目录\nCOPY . . \nENTRYPOINT ["dotnet", "Look.dll"]\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("把程序发布到文件夹cp到指定文件夹下")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.拉取.net6镜像\ndocker pull mcr.microsoft.com/dotnet/aspnet:6.0\n2.进入发布程序文件夹下构造镜像\ncd projects/\ndocker build -t look .  #look是镜像名称\n3.创建容器格式：\ndocker run -d --name  容器名  -p  外部端口号:docker容器端口号  --restart=always  -v  /宿主机目录 : /容器目录  镜像名\n\ndocker run -d --name look -p 5001:81  look\n\n-d　　　　               #后台运行\n\n-p 8001:80　　　　#缩主机端口号 : docker端口号\n\n-v　　　　              #数据卷路径，格式：（-v  /宿主机目录 : 容器目录）或者（-v  /容器目录），可以带多个 -v 参数。\n\n--restart=always     #dokcer重新启动时也将容器自动启动\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("h2",{attrs:{id:"docker常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[t._v("#")]),t._v(" Docker常用命令")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("命令")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker images")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("查看镜像列表")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker search ubuntu")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("镜像搜索（比如搜索 ubuntu 基础镜像）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker pull           镜像名")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("下拉镜像")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker save        镜像名/镜像ID -o 镜像保存在哪个位置与名字")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("保存镜像")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker rmi -f         镜像名/镜像ID")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("删除镜像")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker ps -a")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("查看所有容器 -----包含正在运行 和已停止的*")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker stop          容器名/容器ID")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("停止容器")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker start        容器名/容器ID")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("开启容器")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker rm -f          容器名/容器ID")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("删除一个容器")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker rm -f         容器名/容器ID 容器名/容器ID 容器名/容器ID")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("删除多个容器 空格隔开要删除的容器名或容器ID")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker rm -f $(docker ps -aq)")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("em",[t._v("删除全部容器")])])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker logs 镜像名")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("查看日志")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("docker  exec  -it  id  /bin/bash")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("进入容器文件")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("service docker start")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("重启docker")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("systemctl enable docker")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("开机自动启docker")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);